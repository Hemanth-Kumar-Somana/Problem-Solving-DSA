Given an unsorted array of integers nums, return the length of the longest consecutive elements sequence.

You must write an algorithm that runs in O(n) time.

 

Example 1:

Input: nums = [100,4,200,1,3,2]
Output: 4
Explanation: The longest consecutive elements sequence is [1, 2, 3, 4]. Therefore its length is 4.
Example 2:

Input: nums = [0,3,7,2,5,8,4,6,0,1]
Output: 9
Example 3:

Input: nums = [1,0,1,2]
Output: 3
 




class Solution:
    def longestConsecutive(self, nums: List[int]) -> int:
        if not nums:
            return 0

        nums = sorted(set(nums))
        longest = 1
        current = 1

        for i in range(1, len(nums)):
            if nums[i] == nums[i - 1] + 1:
                current += 1
                longest = max(longest, current)
            else:
                current = 1

        return longest



def longest_successive_elements(nums):
    if not nums:
        return 0
    nums.sort()
    last_smaller = float('-inf')
    cnt = 0
    longest = 1

    for num in nums:
        if num - 1 == last_smaller:
            cnt += 1
            last_smaller = num
        elif last_smaller != num:
            cnt = 1
            last_smaller = num
        longest = max(longest, cnt)

    return longest

# Example usage:
# print(longest_successive_elements([100, 4, 200, 1, 3, 2]))  # Output: 4

